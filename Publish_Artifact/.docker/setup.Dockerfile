# This docker file is responsible to execute the main script and publish artifacts generated by main.py

# Using argument from docker compose environment
ARG pythonversion

FROM python:$pythonversion

ARG pythonversion
ARG REQUIREMENTS
ARG entryfilename

RUN echo "output created with pythonVersion: ${pythonversion}"

# Install dependencies
RUN apt-get update
# Python development libraries
RUN apt-get install -y python3-dev python3-pip
# Required libraries to generated dynamic linked library from python file
# RUN apt-get install -y mingw-w64-x86-64-dev gcc-mingw-w64-x86-64 g++-mingw-w64-x86-64
RUN apt-get install -y gcc-mingw-w64-x86-64
# VCS
RUN apt-get install -y git

# Clone docker repository
RUN git clone https://github.com/gahan9/DockerExamples.git ${WORKDIR}/docker_examples

# Navigate to Publish_Artifact directory by modifying WORKDIR
WORKDIR ${WORKDIR}/docker_examples/Publish_Artifact

# Install PyPi requirements for project
RUN python -m pip install -r $REQUIREMENTS

# Build Artifact
# RUN python setup.py build_ext --inplace
ENV entryfilename=$entryfilename

RUN echo file name: ${entryfilename}, python version: $pythonversion
RUN cythonize -a -i ${entryfilename}.py

# Make sure we endup with expected output result of artifact
RUN mv ${entryfilename}.cpython* ${entryfilename}.cpython-${pythonversion}.so


ENTRYPOINT [ "/bin/bash" ]
